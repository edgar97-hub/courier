import{a as f}from"./chunk-XRPHOQB2.js";import{I as i,Jc as o,Lc as _,Yc as S,da as s,ia as m,m as g,na as p,t as d,u as n,x as h}from"./chunk-YUSEJVZ2.js";var c={business_name:null,ruc:null,address:null,phone_number:null,logo_url:null,terms_conditions_url:null,background_image_url:null,rates_image_url:null,excel_import_template_url:null,coverage_map_url:null,global_notice_image_url:null,promotional_sets:[]};var b=class u{http=p(_);authService=p(f);apiUrl=S.apiUrl+"/settings";settingsSubject=new g(null);settings$=this.settingsSubject.asObservable();constructor(){}getAuthHeaders(){let e=this.authService.getAccessToken();return e?new o({"Content-Type":"application/json",codrr_token:e}):new o({"Content-Type":"application/json"})}loadSettings(){let e=this.getAuthHeaders();return this.authService.getAccessToken()?this.http.get(this.apiUrl+"/all",{headers:e}).pipe(h(t=>t||c),s(t=>{this.settingsSubject.next(t),console.log("SettingsService: Settings loaded from API and Subject updated",t)}),i(this.handleError("loadSettings",c))):n(()=>new Error("Not authenticated to fetch users."))}saveSettings(e){let t=this.getAuthHeaders();return this.authService.getAccessToken()?this.http.put(this.apiUrl+"/edit/"+e.id,e,{headers:t}).pipe(s(r=>{this.settingsSubject.next(r),console.log("SettingsService: Settings saved and Subject updated",r)}),i(this.handleError("saveSettings"))):n(()=>new Error("Not authenticated to fetch users."))}uploadLogo(e){let t=new FormData;t.append("logoFile",e,e.name);let r=this.authService.getAccessToken();if(!r)return n(()=>new Error("Not authenticated to fetch users."));let l=new o({codrr_token:r});return this.http.post(`${this.apiUrl}/upload-logo`,t,{headers:l}).pipe(s(a=>console.log("SettingsService: Logo uploaded",a)),i(this.handleError("uploadLogo")))}uploadTermsPdf(e){let t=new FormData;t.append("termsPdfFile",e,e.name);let r=this.authService.getAccessToken();if(!r)return n(()=>new Error("Not authenticated to fetch users."));let l=new o({codrr_token:r});return this.http.post(`${this.apiUrl}/upload-terms-pdf`,t,{headers:l}).pipe(s(a=>console.log("SettingsService: Terms PDF uploaded",a)),i(this.handleError("uploadTermsPdf")))}uploadFile(e){let t=new FormData;t.append("file",e,e.name);let r=this.authService.getAccessToken();if(!r)return n(()=>new Error("Not authenticated to fetch users."));let l=new o({codrr_token:r});return this.http.post(`${this.apiUrl}/upload-file`,t,{headers:l}).pipe(s(a=>console.log("SettingsService: Terms PDF uploaded",a)),i(this.handleError("file")))}handleError(e="operation",t){return r=>(console.error(`${e} failed: ${r.message}`,r),t!==void 0?d(t):n(()=>new Error(`Error in ${e}. Details: ${r.message||"Server error"}`)))}getCurrentSettings(){return this.settingsSubject.value}static \u0275fac=function(t){return new(t||u)};static \u0275prov=m({token:u,factory:u.\u0275fac,providedIn:"root"})};export{c as a,b};
