import{I as o,Jc as v,Ka as h,Lc as U,O as f,Sc as A,Yc as i,da as n,ia as S,na as u,t as p,u as c,x as m}from"./chunk-YUSEJVZ2.js";var a="access_token",g="refresh_token",d="user_info",k=class l{http=u(U);router=u(A);isAuthenticated=h(!1);currentUser=h(null);loginUrl=i.apiUrl+"/auth/login";usersUrl=i.apiUrl+"/users";constructor(){this.loadSessionFromStorage()}loadSessionFromStorage(){let e=localStorage.getItem(a),t=localStorage.getItem(d);if(e&&t)try{let r=JSON.parse(t);this.isAuthenticated.set(!0),this.currentUser.set(r),console.log("AuthService: Session loaded from storage.",r)}catch(r){console.error("AuthService: Error parsing user from storage.",r),this.clearUserSessionAndSignals()}else this.clearUserSessionAndSignals()}storeTokens(e,t){localStorage.setItem(a,e),t&&localStorage.setItem(g,t)}storeUserInfo(e){localStorage.setItem(d,JSON.stringify(e))}clearUserSessionAndSignals(){localStorage.removeItem(a),localStorage.removeItem(g),localStorage.removeItem(d),this.isAuthenticated.set(!1),this.currentUser.set(null)}getCurrentUserFromBackend(){let e=this.getAccessToken(),t;return e&&(t=new v({"Content-Type":"application/json",codrr_token:e})),this.http.get(`${this.usersUrl}/perfil/me`,{headers:t}).pipe(n(r=>{this.currentUser.set(r),this.storeUserInfo(r),this.isAuthenticated.set(!0),console.log("AuthService: Usuario actualizado desde el backend",r)}),o(r=>(console.error("Error al obtener el usuario actual desde el backend",r),this.clearUserSessionAndSignals(),this.router.navigate(["/login"]),c(()=>r))))}getAccessToken(){return localStorage.getItem(a)}refreshToken(){let e=localStorage.getItem(g);if(!e)return this.logout(),p({});let t={refreshToken:e};return this.http.post(i.apiUrl+"/auth/refresh",t).pipe(n(r=>{this.storeTokens(r.accessToken,r.refreshToken),console.log("AuthService: Token refreshed successfully.")}),o(this.handleError))}login(e){let t={email:e.email,password:e.password};return this.http.post(this.loginUrl,t).pipe(f(1e3),m(r=>{let s={id:r.user.id,role:r.user.role,email:e.email,username:e.email.split("@")[0]};return{accessToken:r.accessToken,user:s}}),n(r=>{this.storeTokens(r.accessToken,r.refreshToken),this.storeUserInfo(r.user),this.isAuthenticated.set(!0),this.currentUser.set(r.user),console.log("AuthService: Login successful, internal signals updated.")}),o(this.handleError))}loginPromise(e){return new Promise((t,r)=>{this.login(e).subscribe({next:s=>t(s),error:s=>r(s)})})}logout(){console.log("AuthService: logout - Clearing session and signals..."),this.clearUserSessionAndSignals(),this.router.navigate(["/login"])}handleError(e){let t="Login failed. Please check your credentials or network.";return e.error instanceof ErrorEvent?t=`An error occurred: ${e.error.message}`:e.status===400&&e.error&&e.error.error?t=e.error.error:e.status===401?t="Unauthorized. Please check your credentials.":t=`Server error: ${e.status}. ${e.message}`,console.error(t,e),c(()=>new Error(t))}static \u0275fac=function(t){return new(t||l)};static \u0275prov=S({token:l,factory:l.\u0275fac,providedIn:"root"})};export{k as a};
